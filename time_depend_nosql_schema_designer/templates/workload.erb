<% foreign_keys = [] %>
# rubocop:disable all

workload = NoSE::Workload.new do
  # Define entities along with the size and cardinality of their fields
  # as well as an estimated number of each entity
  <% workload.model.entities.each_value do |entity| %>
(Entity '<%= entity.name %>' do
  <% entity.fields.each_value do |field| %>
  <%
    if field.is_a? NoSE::Fields::ForeignKeyField
      foreign_keys << field
      next
    end
  %>
<%= field.subtype_name name_case: :camel %> '<%= field.name %>',<%=
  case [field.class]
  when [NoSE::Fields::StringField]
    "#{field.size}, "
  else
    ''
  end
  %> count: <%= field.cardinality %>

  <% end %>
end) * <%= entity.count %>


  <% end %>

  <% foreign_keys.each do |key| %>
    ForeignKey '<%= key.name %>', '<%= key.parent.name %>', '<%= key.entity.name %>', count: <%= key.cardinality %>

  <% end %>

  # Define queries and their relative weights
  <% workload.statement_weights.each do |statement, weight| %>
  Q '<%= statement.query %>', <%= weight %>

  <% end %>
end
# rubocop:enable all
